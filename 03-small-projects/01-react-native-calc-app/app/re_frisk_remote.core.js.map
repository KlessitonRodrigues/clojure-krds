{"version":3,"sources":["re_frisk_remote/core.cljs"],"mappings":";AAqBA,GAAA,QAAAA,4CAAAC,iDAAAC;AAAA;AAAA,AAAA,AAASC,kCAAW,6CAAA,7CAACC;;AACrB,GAAA,QAAAJ,4CAAAC,iDAAAI;AAAA;AAAA,AAAA,AAASC,mCAAY,6CAAA,7CAACF;;AAEtB,GAAA,QAAAJ,4CAAAC,iDAAAM;AAAA;AAAA,AAAA,AAASC,iCAAU,6CAAA,7CAACJ;;AACpB,GAAA,QAAAJ,4CAAAC,iDAAAQ;AAAA;AAAA,AAAA,AAASC,uCAAgB,6CAAA,7CAACN;;AAE1B,4BAAA,5BAAOO,gEAAMC;AAAb,AACE,oBAAM,iBAAAC,oBAAKD;AAAL,AAAA,oBAAAC;AAAA,IAAAA,wBAAA,AAAAC,gBAAcX;AAAd,AAAA,oBAAAU;AAAA,OAAAC,gBAA0BN;;AAA1BK;;;AAAAA;;;AAAN,AACE,IAAAE,eAAA,AAAAD,gBAAEN;AAAF,AAAA,QAAAO,6CAAAA,sDAAAA,XAAYH,kCAAAA;;AADd;;;AAGF,8BAAA,9BAAOI;AAAP,AACE,SAAA,AAAAF,LAAMG,qBAAIC;AAAV,AACE,oBAAA,AAAAJ,gBAAKJ;AAAgB,IAAAS,eAAA,AAAAL,gBAAEJ;AAAF,AAAA,QAAAS,6CAAAA,iDAAAA,NAAkBF,6BAAAA;;AAAIA;;;AAE/C,uCAAA,vCAAOG;AAAP,AACE,IAAMC,OAAK,AAACC;AAAZ,AACE,IAAAC,qBAAa,AAACE,kCAAY,AAAA,4FAAA,AAAAX,gBAAaX,kCAAYkB;AAAnD,AAAA,oBAAAE;AAAA,AAAA,QAAAA,JAAWC;AAAX,AACE,mGAAA,nGAACE,mDAAMvB,gCAAWwB,8EAAiBN;;AACnC,iCAAA,mFAAA,7GAACV,2LAA0Ba;;AAF7B;;;AAIJ,yCAAA,zCAAOI;AAAP,AACE,IAAMX,KAAG,AAACD;AAAV,AACE,IAAAO,qBAAa,AAACE,kCAAY,AAAA,iGAAA,AAAAX,gBAAeX,kCAAYc;AAArD,AAAA,oBAAAM;AAAA,AAAA,QAAAA,JAAWC;AAAX,AACE,mGAAA,nGAACE,mDAAMvB,gCAAWwB,mFAAmBV;;AACrC,iCAAA,mFAAA,7GAACN,gMAA4Ba;;AAF/B;;;AAIJ,wCAAA,xCAAMK;AAAN,AACE,AAACT;;AACD,OAACQ;;AAEH,2CAAA,3CAAOE,8FAAqBC,MAAMC;AAAlC,AACE,oBAAA,AAAAlB,gBAAOX;AAAP,AACE,IAAMc,KAAK,AAACD;IAENiB,OAAK,AAACC,wBAAU,AAAA,4GAAA,AAAApB,gBAAqBX,kCAAYc;AAFvD,AAGE,mGAAA,nGAACS,mDAAMvB,gCAAWwB,8FAAyBV;;AAC3C,0BAAA,mFAAA,oEAAA,2CAAA,4DAAA,uEAAA,/VAACN,kRAAmCoB,wEACAE,4DACAD;;AACpC,2EAAA,pEAACG,8BAAqBN;;AAR1B;;;AAUF,gCAAA,hCAAMO,wEAAUC;AAAhB,AACE,oEAAA,pEAACF,8BAAqBN;;AACtB,IAAAS,aAAA,AAAAC,cAAc,AAACY,gCAAuBd;IAAtCG,eAAA;IAAAC,eAAA;IAAAC,WAAA;;AAAA,AAAA,GAAA,AAAA,CAAAA,WAAAD;AAAA,YAAA,AAAAD,kDAAAE,1DAAQQ;AAAR,AAAA,AACE,0BAAA,mFAAA,7GAACvC,iLAAqBuC;;AADxB;AAAA,eAAAZ;eAAAE;eAAAC;eAAA,CAAAC,WAAA;;;;;;;AAAA,IAAAnB,qBAAA,AAAAgB,cAAAD;AAAA,AAAA,GAAAf;AAAA,AAAA,IAAAe,iBAAAf;AAAA,AAAA,GAAA,AAAAoB,6BAAAL;AAAA,IAAAM,kBAAA,AAAAC,sBAAAP;AAAA,AAAA,eAAA,AAAAQ,qBAAAR;eAAAM;eAAA,AAAAG,gBAAAH;eAAA;;;;;;;AAAA,YAAA,AAAAI,gBAAAV,xBAAQY;AAAR,AAAA,AACE,0BAAA,mFAAA,7GAACvC,iLAAqBuC;;AADxB;AAAA,eAAA,AAAAD,eAAAX;eAAA;eAAA;eAAA;;;;;;;;AAAA;;;;;;AAGF,GAAA,QAAAtC,4CAAAC,iDAAAmD;AAAA;AAAA,AAAA;;;yCAAA,iBAAAC,6BAAA,AAAAjD,6CAAA,pIAAU0D;IAAVR,6BAAA,AAAAlD,6CAAA;IAAAmD,6BAAA,AAAAnD,6CAAA;IAAAoD,iCAAA,AAAApD,6CAAA;IAAAqD,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAC,eAAA;AAAA,AAAA,QAAAA,6CAAAA,+CAAAA;;AAAA,AAAA,YAAAC,kBAAA,AAAAC,+CAAA,uBAAA,qBAAA,kDAAA,4DAAAJ,wBAAAJ,2BAAAC,2BAAAC,2BAAAC;;;AAEA,AAAAM,mFAAA,+DAAA,WAAAC;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;UAAAA,NACuDQ;IADvDN,aAAA,AAAAR,4CAAAM,eAAA;IAAAG,aAAA,AAAAC,4CAAAF,WAAA,IAAA;IAAAC,iBAAA,AAAAF,4BAAAE;sBAAA,AAAAT,4CAAAS,eAAA,7EACMG;IADND,aAAA,AAAAD,4CAAAF,WAAA,IAAA;IAAAG,iBAAA,AAAAJ,4BAAAI;sBAAA,AAAAX,4CAAAW,eAAA,7EACyBE;AADzB,AAEE,GAAI,AAACE,gDAAKH,gBAAUC;AAClB,6DAAA,tDAACG,sBAAOvE;;AADV;;;AAGF,+BAAA,/BAAOwE;AAAP,AACE,oBAAA,AAAA7D,gBAAKX;AACH,AACE,0BAAA,mFAAA,7GAACQ,gLAAoB,AAAA,4FAAA,AAAAG,gBAAaX;;AAClC,iCAAA,mFAAA,7GAACQ,mLAAsB,AAAA,iGAAA,AAAAG,gBAAeX;;AACxC,IAAMc,KAAK,AAACD;IACNK,OAAK,AAACC;AADZ,AAEE,sDAAA,2CAAA,iFAAA,sEAAA,xPAACoD,sBAAOvE,yJAA+Bc,sEACAA,iEACAI;;AACvC,0BAAA,mFAAA,7GAACV,gLAAoBU;;AACrB,iCAAA,mFAAA,7GAACV,mLAAsBM;;;AAE7B,AAAA6C,mFAAA,2DAAA,WAAAc;AAAA,AAAA,IAAAC,aAAAD;IAAAC,iBAAA,AAAAZ,4BAAAY;IAAAC,aAAA,AAAApB,4CAAAmB,eAAA;WAAA,AAAAT,4CAAAU,WAAA,IAAA,lEAA2CC;WAA3C,AAAAX,4CAAAU,WAAA,IAAA,lEAAgDE;AAAhD,AACE,IAAAC,WAAMF;IAANE,eAAA,EAAA,CAAAA,oBAAAC,oBAAA,AAAAD,aAAA;AAAA,AAAA,QAAAA;KAAA;AACkB,OAACN;;;KADnB;AAEmB,6DAAA,tDAACD,sBAAOvE;;;;AAF3B,MAAA,KAAAgF,MAAA,CAAA,mEAAAF;;;;AAIF,AAAAnB,mFAAA,4DAAA,WAAuCU;AAAvC,AAAA;;AAGA,+CAAA,/CAAOY,sGAAyBC;AAAhC,AACE,mCAAA,2CAAA,qEAAA,mFAAA,iBAAA,vPAACC;;AACD,IAAAC,aACM,qFAAA,QAAA,uDAAA,2CAAA,qDAAA,qDAAA,2DAAA,4DAAA,oDAAA,wDAAA,2CAAA,qDAAA,mFAAA,/rBAACG,+VAIWL,uZAGA,gFAAA,qDAAA,2CAAA,8EAAA,9PAACM;AAAD,AAEsB,OAACC,8DAAsB;AAAA,AAAA;GAAsB;AAAA,AAAA;;WAFnE;IARlBL,iBAAA,AAAAtB,4BAAAsB;cAAA,AAAA7B,4CAAA6B,eAAA,rEAAcC;cAAd,AAAA9B,4CAAA6B,eAAA,rEAAsBE;AAAtB,AAYE,AAACf,sBAAOlE,+BAAUgF;;AAClB,OAACK,8CAAgCJ,QAAQ3B;;AAE7C,AAAA,oDAAA,4DAAAgC,hHAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,uFAAAF;;;AAAA,AAAA,CAAA,yFAAA,WAAAG,pGAAMD;AAAN,AAAA,IAAAE,aAAAD;IAAAE,aAAA,AAAAnC,4CAAAkC,WAAA,IAAA;IAAAC,iBAAA,AAAAtC,4BAAAsC;WAAAA,PAAoDG;WAApD,AAAAhD,4CAAA6C,eAAA,lEAA0ClB;AAA1C,AACE,oBAAA,AAAAvE,gBAAWR;AAAX;;AAAA,AACE,uDAAA,vDAACoE,sBAAOpE;;AACR,AAACoE,sBAAOhE,qCAAgB,AAAA,uGAAkBgG;;AAC1C,AAACtB,6CAAwB,iBAAAuB,mBAAItB;AAAJ,AAAA,oBAAAsB;AAAAA;;AAAA;;;;AACzB,GAAI,AAACC;AACH,AACE,CAAMC,oCAAkCC;;AACxC,wCAAA,jCAACC,yGAAiD3E;;AACpD,OAAC4E,oEAAiClF;;;;;AATxC,CAAA,4EAAA,5EAAMsE;;AAAN;AAAA,CAAA,sEAAA,WAAAI,jFAAMJ;AAAN,AAAA,IAAAK,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAlE,cAAAiE;;;AAAA,AAWA,AAAA,8BAAA,sCAAAV,pEAAMmB;AAAN,AAAA,IAAAlB,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAkB,iEAAAf;;;AAAA,AAAA,CAAA,mEAAA,WAAAgB,9EAAMD;AAAN,AAAA,IAAAE,aAAAD;aAAA,AAAA9C,4CAAA+C,WAAA,IAAA,pEAAiBE;AAAjB,AACE,OAACC,yIAAwBD;;;AAD3B,CAAA,sDAAA,tDAAMJ;;AAAN;AAAA,CAAA,gDAAA,WAAAG,3DAAMH;AAAN,AAAA,IAAAR,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAlE,cAAA6E;;;AAAA","names":["js/re-frisk-remote","js/re-frisk-remote.core","js/re-frisk-remote.core.send-state","re-frisk-remote.core/send-state","cljs.core.atom","js/re-frisk-remote.core.initialized","re-frisk-remote.core/initialized","js/re-frisk-remote.core.chsk-send","re-frisk-remote.core/chsk-send","js/re-frisk-remote.core.normalize-db-fn","re-frisk-remote.core/normalize-db-fn","re-frisk-remote.core/send","message","and__5043__auto__","cljs.core/deref","fexpr__24786","re-frisk-remote.core/get-db","db","re-frame.db/app-db","fexpr__24787","re-frisk-remote.core/send-subs-delta","subs","re-frisk.utils/get-subs","temp__5804__auto__","d","re-frisk-remote.delta.delta/delta","cljs.core.swap_BANG_","cljs.core/assoc","re-frisk-remote.core/send-app-db-delta","re-frisk-remote.core/send-db-and-subs","re-frisk-remote.core/post-event-callback","value","queue","diff","re-frisk.diff.diff/diff","re-frisk.utils/call-and-chill","re-frisk-remote.core/trace-cb","traces","seq__24788","cljs.core/seq","chunk__24789","count__24790","i__24791","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","trace","re-frisk.trace/normalize-traces","js/re-frisk-remote.core.event-msg-handler","method-table__5642__auto__","prefer-table__5643__auto__","method-cache__5644__auto__","cached-hierarchy__5645__auto__","hierarchy__5646__auto__","cljs.core.get","fexpr__24792","cljs.core/MultiFn","cljs.core.symbol","re-frisk-remote.core/event-msg-handler","p__24793","map__24794","cljs.core/--destructure-map","vec__24795","map__24798","cljs.core.nth","map__24799","was-open?","now-open?","msg","cljs.core.not_EQ_","cljs.core/reset!","re-frisk-remote.core/enabled","p__24800","map__24801","vec__24802","type","data","G__24805","cljs.core/Keyword","js/Error","re-frisk-remote.core/start-socket-and-router","host","taoensso.timbre/merge-config!","map__24806","send-fn","ch-recv","taoensso.sente.make_channel_socket_client_BANG_","taoensso.sente.packers.transit.get_transit_packer","cognitect.transit.write_handler","taoensso.sente/start-client-chsk-router!","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","re-frisk-remote.core/enable-re-frisk-remote!","p__24808","vec__24809","map__24812","seq24807","self__5755__auto__","opts","or__5045__auto__","re-frame.trace/is-trace-enabled?","reagent.impl.component/static-fns","re-frisk.trace/static-fns","re-frame.trace/register-trace-cb","re_frame.core.add_post_event_callback","re-frisk-remote.core/enable","p__24814","vec__24815","seq24813","params","re_frisk_remote.core.enable_re_frisk_remote_BANG_"],"sourcesContent":["(ns re-frisk-remote.core\n  (:require-macros [reagent.ratom :refer [reaction]])\n  (:require\n   [reagent.impl.component]\n   [re-frame.core :as re-frame]\n   [re-frame.db :as db]\n   [re-frame.trace]\n   [re-frisk.trace :as trace]\n   [re-frisk.utils :as utils]\n   [re-frisk.diff.diff :as diff]\n   [re-frisk-remote.delta.delta :as delta]\n   [taoensso.sente.packers.transit :as sente-transit]\n   [taoensso.sente :as sente]\n   [taoensso.timbre :as timbre]\n   [cognitect.transit :as transit]))\n\n;; if there are no opened tool web clients we don't want to send any data\n;; either nil (do not send), or a map with the following optional keys:\n;; :prev-app-db -- app DB last time :refrisk/app-db was sent\n;; :prev-event-app-db -- app DB last time :refrisk/events was sent\n;; :prev-subs -- subs last time :refrisk/subs was sent\n(defonce send-state (atom nil))\n(defonce initialized (atom false))\n\n(defonce chsk-send (atom {}))\n(defonce normalize-db-fn (atom nil))\n\n(defn- send [message]\n  (when (and message @send-state @chsk-send)\n    (@chsk-send message)))\n\n(defn- get-db []\n  (let [db @db/app-db]\n    (if @normalize-db-fn (@normalize-db-fn db) db)))\n\n(defn- send-subs-delta []\n  (let [subs (utils/get-subs)]\n    (when-let [d (delta/delta (:prev-subs @send-state) subs)]\n      (swap! send-state assoc :prev-subs subs)\n      (send [:refrisk/subs-delta d]))))\n\n(defn- send-app-db-delta []\n  (let [db (get-db)]\n    (when-let [d (delta/delta (:prev-app-db @send-state) db)]\n      (swap! send-state assoc :prev-app-db db)\n      (send [:refrisk/app-db-delta d]))))\n\n(defn send-db-and-subs []\n  (send-subs-delta)\n  (send-app-db-delta))\n\n(defn- post-event-callback [value queue]\n  (when @send-state\n    (let [db   (get-db)\n          ;;This diff may be expensive\n          diff (diff/diff (:prev-event-app-db @send-state) db)]\n      (swap! send-state assoc :prev-event-app-db db)\n      (send [:refrisk/event {:event       value\n                             :app-db-diff diff\n                             :queue       queue}])\n      (utils/call-and-chill send-db-and-subs 500))))\n\n(defn trace-cb [traces]\n  (utils/call-and-chill send-db-and-subs 500)\n  (doseq [trace (trace/normalize-traces traces)]\n    (send [:refrisk/event trace])))\n\n(defmulti event-msg-handler \"Sente `event-msg`s handler\" :id)\n\n(defmethod event-msg-handler :chsk/state\n  [{[{was-open? :open?} {now-open? :open?}] :?data :as msg}]\n  (if (not= was-open? now-open?)\n    (reset! send-state nil)))\n\n(defn- enabled []\n  (if @send-state\n    (do\n      (send [:refrisk/subs (:prev-subs @send-state)])\n      (send [:refrisk/app-db (:prev-app-db @send-state)]))\n    (let [db   (get-db)\n          subs (utils/get-subs)]\n      (reset! send-state {:prev-event-app-db db\n                          :prev-app-db       db\n                          :prev-subs         subs})\n      (send [:refrisk/subs subs])\n      (send [:refrisk/app-db db]))))\n\n(defmethod event-msg-handler :chsk/recv [{[type data] :?data}]\n  (case type\n    :refrisk/enable (enabled)\n    :refrisk/disable (reset! send-state nil)))\n\n(defmethod event-msg-handler :default [msg]\n  nil)\n\n(defn- start-socket-and-router [host]\n  (timbre/merge-config! {:ns-blacklist [\"taoensso.sente\" \"taoensso.sente.*\"]})\n  (let [{:keys [send-fn ch-recv]}\n        (sente/make-channel-socket-client!\n         \"/chsk\"\n         nil\n         {:type     :auto\n          :host     host\n          :protocol :http\n          :params   {:kind :re-frisk-remote}\n          :packer   (sente-transit/get-transit-packer\n                     :json\n                     {:handlerForForeign #(transit/write-handler (fn [] \"ForeignType\") (fn [] \"\"))}\n                     {})})]\n    (reset! chsk-send send-fn)\n    (sente/start-client-chsk-router! ch-recv event-msg-handler)))\n\n(defn enable-re-frisk-remote! [& [{:keys [host] :as opts}]]\n  (when-not @initialized\n    (reset! initialized true)\n    (reset! normalize-db-fn (:normalize-db-fn opts))\n    (start-socket-and-router (or host \"localhost:4567\"))\n    (if (re-frame.trace/is-trace-enabled?)\n      (do\n        (set! reagent.impl.component/static-fns trace/static-fns)\n        (re-frame.trace/register-trace-cb :re-frisk-trace trace-cb))\n      (re-frame/add-post-event-callback post-event-callback))))\n\n(defn enable [& [params]]\n  (enable-re-frisk-remote! params))"]}